<script cml-type="interface">
type res = {
  os: String,
  env: String,
  viewportWidth: Number,
  viewportHeight: Number,
  extraParams: CMLObject
}

type CallBack = (res: res) => void

interface UserInfoInterface {
  getSystemInfo(cb: CallBack): void
}
</script>

<script cml-type="web">
  import bridge from '../../lib/sdk/cmlBridge';
  import { inSDK } from '../../lib/sdk/env';
  import { isIos } from '../../lib/web/ua';
  import { getViewportSize } from './common.js';

  let systemInfo = null;

  class Method implements UserInfoInterface {
    getSystemInfo(cb) {
      if (systemInfo) {
        cb(systemInfo)
        return 
      }
      const os = isIos() ? 'ios' : 'android';
      let { viewportWidth, viewportHeight } = getViewportSize();
      if (inSDK()) {
        bridge.getSystemInfo({}, function (res) {
          const {errno, data} = res;
          if(errno == 0) {
            const { os, viewportWidth, viewportHeight, extraParams, ...extra } = data;
            systemInfo = {
              os,
              env: 'web',
              viewportWidth,
              viewportHeight,
              extraParams: {
                ...extraParams,
                ...extra
              }
            }
            cb(systemInfo);
          }
        });
      } else {
        systemInfo = {
          os,
          env: 'web',
          viewportWidth,
          viewportHeight,
          extraParams: {}
        }
        cb(systemInfo);
      }
    }
  }

  export default new Method();
</script>

<script cml-type="weex">
import cmlBridge from '../../lib/sdk/cmlBridge';
import { inSDK } from '../../lib/sdk/env';
let systemInfo = null;

class Method implements UserInfoInterface {
  getSystemInfo(cb) {
    if (systemInfo) {
      cb(systemInfo)
      return 
    }
    if(inSDK()) {
      cmlBridge.getSystemInfo({}, function (res) {
        const {errno, data} = res;
        if(errno == 0) {
          const { os, viewportWidth, viewportHeight, extraParams, ...extra } = data;
          systemInfo = {
            os,
            env: 'weex',
            viewportWidth,
            viewportHeight,
            extraParams: {
              ...extraParams,
              ...extra
            }
          }
          cb(systemInfo);
        }
      });
    }else {
      let viewportWidth = (WXEnvironment.deviceWidth / WXEnvironment.scale) - 0;
      let viewportHeight = (WXEnvironment.deviceHeight / WXEnvironment.scale) - 0;

      let os = WXEnvironment.platform.toLowerCase();
      let extraParams = Object.assign({}, WXEnvironment);

      systemInfo = {
        os,
        env: 'weex',
        viewportWidth,
        viewportHeight,
        extraParams: {
          ...extraParams,
          os
        }
      };

      cb(systemInfo);
    }
  }
}

export default new Method();
</script>


<script cml-type="wx">
  let systemInfo = null;

  class Method implements UserInfoInterface {
    getSystemInfo(cb) {
      if (systemInfo) {
        cb(systemInfo)
        return 
      }
      wx.getSystemInfo({
        success(res) {
          let os = /android/i.test(res.system) ? 'android' : 'ios';
          let viewportWidth = res.windowWidth;
          let viewportHeight = res.windowHeight;
          systemInfo = {
            os,
            env: 'wx',
            viewportWidth,
            viewportHeight,
            extraParams: res || {}
          };
          cb(systemInfo);
        },
        fail(err) {
          // 获取失败时不做存储
          let failSystemInfo = {
            os: '',
            env: 'wx',
            viewportWidth: 0,
            viewportHeight: 0,
            extraParams: {}
          };
          cb(failSystemInfo);
        }
      });
    }
  }

  export default new Method();
</script>


<script cml-type="qq">
  let systemInfo = null;

  class Method implements UserInfoInterface {
    getSystemInfo(cb) {
      if (systemInfo) {
        cb(systemInfo)
        return 
      }
      qq.getSystemInfo({
        success(res) {
          let os = /android/i.test(res.system) ? 'android' : 'ios';
          let viewportWidth = res.windowWidth;
          let viewportHeight = res.windowHeight;
          systemInfo = {
            os,
            env: 'qq',
            viewportWidth,
            viewportHeight,
            extraParams: res || {}
          };
          cb(systemInfo);
        },
        fail(err) {
          // 获取失败时不做存储
          let failSystemInfo = {
            os: '',
            env: 'qq',
            viewportWidth: 0,
            viewportHeight: 0,
            extraParams: {}
          };
          cb(failSystemInfo);
        }
      });
    }
  }

  export default new Method();
</script>

<script cml-type="baidu">
  let systemInfo = null;
  class Method implements UserInfoInterface {
    getSystemInfo(cb) {
      if (systemInfo) {
        cb(systemInfo)
        return 
      }
      swan.getSystemInfo({
        success(res) {
          let os = /android/i.test(res.system) ? 'android' : 'ios';
          let viewportWidth = res.windowWidth;
          let viewportHeight = res.windowHeight;
          systemInfo = {
            os,
            env: 'baidu',
            viewportWidth,
            viewportHeight,
            extraParams: res || {}
          };
          cb(systemInfo);
        },
        fail(err) {
          // 获取失败时不做存储
          let failSystemInfo = {
            os: '',
            env: 'baidu',
            viewportWidth: 0,
            viewportHeight: 0,
            extraParams: {}
          };
          cb(failSystemInfo);
        }
      });
    }
  }

  export default new Method();
</script>

<script cml-type="alipay">
  let systemInfo = null;
  class Method implements UserInfoInterface {
    getSystemInfo(cb) {
      if (systemInfo) {
        cb(systemInfo)
        return 
      }
      my.getSystemInfo({
        success(res) {
          let os = res.platform === "iPhone" ? "ios" : "android";
          let viewportWidth = res.windowWidth;
          let viewportHeight = res.windowHeight;
          systemInfo = {
            os,
            env: 'alipay',
            viewportWidth,
            viewportHeight,
            extraParams: res || {}
          };
          cb(systemInfo);
        },
        fail(err) {
          // 获取失败时不做存储
          let failSystemInfo = {
            os: '',
            env: 'alipay',
            viewportWidth: 0,
            viewportHeight: 0,
            extraParams: {}
          };
          cb(failSystemInfo);
        }
      });
    }
  }

  export default new Method();
</script>
